name: CI - Build and Thresholded Tests

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    env:
      CI: true
      MIN_PASS_RATE: "0.5" # 50% threshold
    defaults:
      run:
        working-directory: Lance-Sports

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: Lance-Sports/package-lock.json

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build
        run: npm run build

      # Run tests but don't fail the job yet; we'll enforce our own threshold
      - name: Run tests (generate JSON report)
        run: |
          npx vitest run --reporter=json --outputFile=vitest-report.json || true

      - name: Evaluate test pass rate threshold
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const path = 'vitest-report.json';
          if (!fs.existsSync(path)) { console.log('No vitest-report.json found; treating as 0 tests.'); process.exit(1); }
          const data = JSON.parse(fs.readFileSync(path, 'utf8'));

          // Prefer Vitest summary-style fields when present
          const acc = { passed: 0, failed: 0, total: 0 };
          if (typeof data.numTotalTests === 'number') {
            acc.total = data.numTotalTests || 0;
            acc.passed = data.numPassedTests || 0;
            acc.failed = data.numFailedTests || 0;
          } else {
            // Walk task tree as a fallback
            function accumulate(task, acc){
              if (!task) return acc;
              if (Array.isArray(task)) return task.reduce((a,t)=>accumulate(t,a), acc);
              if (task.type === 'test') {
                acc.total += 1;
                if (task.result?.state === 'pass' || task.state === 'pass') acc.passed += 1;
                else if (task.result?.state === 'fail' || task.state === 'fail') acc.failed += 1;
              }
              if (task.tasks) return accumulate(task.tasks, acc);
              return acc;
            }
            accumulate(data, acc);
            // Secondary fallback for other summary shapes
            if (acc.total === 0 && data?.summary) {
              const s = data.summary;
              acc.passed = s.passed ?? 0;
              acc.failed = s.failed ?? 0;
              acc.total = (s.passed ?? 0) + (s.failed ?? 0) + (s.skipped ?? 0) + (s.todo ?? 0);
            }
          }

          const passRate = acc.total > 0 ? acc.passed / acc.total : 0;
          const threshold = parseFloat(process.env.MIN_PASS_RATE || '0.5');
          console.log(`Total tests: ${acc.total}`);
          console.log(`Passed: ${acc.passed}`);
          console.log(`Failed: ${acc.failed}`);
          console.log(`Pass rate: ${(passRate*100).toFixed(2)}% (threshold ${(threshold*100).toFixed(0)}%)`);
          if (acc.total === 0) {
            console.log('No tests detected; failing to avoid false positives.');
            process.exit(1);
          }
          if (passRate < threshold) {
            console.log('Pass rate below threshold. Marking job as failed.');
            process.exit(1);
          } else {
            console.log('Pass rate meets threshold. Continuing.');
          }
          NODE

      - name: Upload test report artifact (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vitest-report
          path: Lance-Sports/vitest-report.json


  # deploy_app:
  #   needs: build_and_test
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: Lance-Sports
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Use Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #         cache: 'npm'
  #         cache-dependency-path: Lance-Sports/package-lock.json
  #     - name: Install dependencies
  #       run: |
  #         if [ -f package-lock.json ]; then
  #           npm ci
  #         else
  #           npm install
  #         fi
  #     - name: Build app
  #       run: npm run build
  #     - name: Proceed with deploy/start (replace with your command)
  #       run: |
  #         echo "Pass-rate threshold met. Place your deploy command here (e.g., Render)."
